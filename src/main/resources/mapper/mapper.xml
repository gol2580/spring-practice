<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.partyMatching.mapper.UserMapper">


    <select id="testInsert" >
        insert into partytest
        values("2","2","2")
    </select>

    <!--로그인 하는 아이디, 비번 일치여부 판단, 아이디 넘김-->
    <!--인자로 받은 dto의 변수 id, pw 사용-->
    <select id="loginCheck" resultType="String">
        SELECT id FROM userInfo
        WHERE id=#{ID} AND pw=#{PW}
    </select>

    <select id="charIn">
        INSERT INTO userchar
        VALUES(#{ID}, #{nickname}, #{server}, #{level}, #{status}, #{force});
        INSERT INTO char_party_ex
        VALUES (#{nickname},"0","0","0","0","0")
    </select>

    <select id="showChar" resultType="Map">
        SELECT nickname, server, level, status, arcforce FROM userchar
    </select>

    <select id="specIn">
        INSERT INTO specification
        VALUES(#{leaderName},#{bossName},#{numOfChar},#{sserver},#{minLevel},#{minStatus},#{minForce})
    </select>

    <select id="showSpec" resultType="Map">
        SELECT leaderName,bossName, numOfChar, sserver, minLevel, minStatus, minForce
        FROM specification
    </select>

    <select id="getSpec">
        SELECT s.numOfChar, s.sserver
        FROM specification s
        WHERE leaderName=#{leaderName} AND bossName=#{bossName}";


    </select>

    <!--일단 dto에 leaderName, bossName, numOfChar 얻어냈다고 가정하고 쿼리작성-->
    <!--map의 key값으로 대응시키면 됨-->
    <select id="getMatching_L" parameterType="Map" resultType="List">
        select e.nickname
        from ( select *
            from userchar u, specification s
            where u.server = s.SSERVER
            AND s.leaderName=#{leaderName}
            AND u.STATUS >= s.minStatus
            AND u.LEVEL >= s.minLevel
            AND u.ARCFORCE >=s.minForce ) a, char_party_ex e
        where e.nickname=a.nickname
        AND e.party_L=\"0\" LIMIT ${numOfChar}
    </select>
    <select id="getMatching_Du" parameterType="Map" resultType="List">
        select e.nickname
        from ( select *
        from userchar u, specification s
        where u.server = s.SSERVER
        AND s.leaderName=#{leaderName}
        AND u.STATUS >= s.minStatus
        AND u.LEVEL >= s.minLevel
        AND u.ARCFORCE >=s.minForce ) a, char_party_ex e
        where e.nickname=a.nickname
        AND e.party_Du=\"0\" LIMIT ${numOfChar}
    </select>
    <select id="getMatching_De" parameterType="Map" resultType="List">
        select e.nickname
        from ( select *
        from userchar u, specification s
        where u.server = s.SSERVER
        AND s.leaderName=#{leaderName}
        AND u.STATUS >= s.minStatus
        AND u.LEVEL >= s.minLevel
        AND u.ARCFORCE >=s.minForce ) a, char_party_ex e
        where e.nickname=a.nickname
        AND e.party_De=\"0\" LIMIT ${numOfChar}
    </select>
    <select id="getMatching_W" parameterType="Map" resultType="List">
        select e.nickname
        from ( select *
        from userchar u, specification s
        where u.server = s.SSERVER
        AND s.leaderName=#{leaderName}
        AND u.STATUS >= s.minStatus
        AND u.LEVEL >= s.minLevel
        AND u.ARCFORCE >=s.minForce ) a, char_party_ex e
        where e.nickname=a.nickname
        AND e.party_W=\"0\" LIMIT ${numOfChar}
    </select>
    <select id="getMatching_H" parameterType="Map" resultType="List">
        select e.nickname
        from ( select *
        from userchar u, specification s
        where u.server = s.SSERVER
        AND s.leaderName=#{leaderName}
        AND u.STATUS >= s.minStatus
        AND u.LEVEL >= s.minLevel
        AND u.ARCFORCE >=s.minForce ) a, char_party_ex e
        where e.nickname=a.nickname
        AND e.party_H=\"0\" LIMIT ${numOfChar}
    </select>
    <!--party_L부분은 파티장이름, nickname은 각 파티원이름-->
    <select id="updatePC_L" parameterType="Map">
        <foreach collection="userArray" item="item" separator=";">
        UPDATE char_party_ex 
        SET party_L=#{item.leaderName}
        WHERE nickname=#{item.nickname}
        </foreach>
    </select>

    <select id="updatePC_De" parameterType="Map">
        <foreach collection="userArray" item="item" separator=";">
            UPDATE char_party_ex
            SET party_De=#{item.leaderName}
            WHERE nickname=#{item.nickname}
        </foreach>
    </select>
    <select id="updatePC_Du" parameterType="Map">
        <foreach collection="userArray" item="item" separator=";">
            UPDATE char_party_ex
            SET party_Du=#{item.leaderName}
            WHERE nickname=#{item.nickname}
        </foreach>
    </select>
    <select id="updatePC_W" parameterType="Map">
        <foreach collection="userArray" item="item" separator=";">
            UPDATE char_party_ex
            SET party_W=#{item.leaderName}
            WHERE nickname=#{item.nickname}
        </foreach>
    </select>
    <select id="updatePC_H" parameterType="Map">
        <foreach collection="userArray" item="item" separator=";">
            UPDATE char_party_ex
            SET party_H=#{item.leaderName}
            WHERE nickname=#{item.nickname}
        </foreach>
    </select>
    <select id="updateP" parameterType="Map">
        insert into partytest values(#{leaderName},#{bossName},#{server})";
    </select>
</mapper>